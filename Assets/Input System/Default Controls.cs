//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input System/Default Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Default Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""cbb3a394-f578-4c00-825f-c0b56958a054"",
            ""actions"": [
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""75e304ea-137d-441c-a0f4-ff82b6a4bfbd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Shortcut"",
                    ""type"": ""Button"",
                    ""id"": ""268eb488-4c2e-473d-ae5b-148c970cfb63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Console Shortcut"",
                    ""type"": ""Button"",
                    ""id"": ""61ff9b61-e58e-4362-ab10-f23b4a1df41a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Door Shortcut"",
                    ""type"": ""Button"",
                    ""id"": ""fc91f72e-f2be-44ed-9ea9-148b62b32860"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Move Camera"",
                    ""type"": ""Button"",
                    ""id"": ""94954f5a-4d40-4796-ad5a-bca096086adb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Move Camera"",
                    ""type"": ""Button"",
                    ""id"": ""1c7faf4e-7027-4381-a03a-066550491771"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f4c484d1-105a-4baf-b5f8-a667579eb816"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e96003f-33ac-41ca-8c20-6f65f8b372e1"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Shortcut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c28c2ed5-a22d-4cda-a060-f82d3591dd56"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Console Shortcut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef4baa01-a4e8-45c6-b81f-8bf1a141d3d2"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Door Shortcut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""844f8516-fe55-454b-8c9f-855b319c1721"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Move Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bcb1a13-acea-49c1-b1df-19a314e7c6dd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Move Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""638164ce-57ef-49e4-997a-27ef41e30444"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Move Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6619143f-af6a-4953-bb97-669b31d6c4b2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Move Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Mouse = m_Player.FindAction("Mouse", throwIfNotFound: true);
        m_Player_CameraShortcut = m_Player.FindAction("Camera Shortcut", throwIfNotFound: true);
        m_Player_ConsoleShortcut = m_Player.FindAction("Console Shortcut", throwIfNotFound: true);
        m_Player_DoorShortcut = m_Player.FindAction("Door Shortcut", throwIfNotFound: true);
        m_Player_LeftMoveCamera = m_Player.FindAction("Left Move Camera", throwIfNotFound: true);
        m_Player_RightMoveCamera = m_Player.FindAction("Right Move Camera", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Mouse;
    private readonly InputAction m_Player_CameraShortcut;
    private readonly InputAction m_Player_ConsoleShortcut;
    private readonly InputAction m_Player_DoorShortcut;
    private readonly InputAction m_Player_LeftMoveCamera;
    private readonly InputAction m_Player_RightMoveCamera;
    public struct PlayerActions
    {
        private @DefaultControls m_Wrapper;
        public PlayerActions(@DefaultControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mouse => m_Wrapper.m_Player_Mouse;
        public InputAction @CameraShortcut => m_Wrapper.m_Player_CameraShortcut;
        public InputAction @ConsoleShortcut => m_Wrapper.m_Player_ConsoleShortcut;
        public InputAction @DoorShortcut => m_Wrapper.m_Player_DoorShortcut;
        public InputAction @LeftMoveCamera => m_Wrapper.m_Player_LeftMoveCamera;
        public InputAction @RightMoveCamera => m_Wrapper.m_Player_RightMoveCamera;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Mouse.started += instance.OnMouse;
            @Mouse.performed += instance.OnMouse;
            @Mouse.canceled += instance.OnMouse;
            @CameraShortcut.started += instance.OnCameraShortcut;
            @CameraShortcut.performed += instance.OnCameraShortcut;
            @CameraShortcut.canceled += instance.OnCameraShortcut;
            @ConsoleShortcut.started += instance.OnConsoleShortcut;
            @ConsoleShortcut.performed += instance.OnConsoleShortcut;
            @ConsoleShortcut.canceled += instance.OnConsoleShortcut;
            @DoorShortcut.started += instance.OnDoorShortcut;
            @DoorShortcut.performed += instance.OnDoorShortcut;
            @DoorShortcut.canceled += instance.OnDoorShortcut;
            @LeftMoveCamera.started += instance.OnLeftMoveCamera;
            @LeftMoveCamera.performed += instance.OnLeftMoveCamera;
            @LeftMoveCamera.canceled += instance.OnLeftMoveCamera;
            @RightMoveCamera.started += instance.OnRightMoveCamera;
            @RightMoveCamera.performed += instance.OnRightMoveCamera;
            @RightMoveCamera.canceled += instance.OnRightMoveCamera;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Mouse.started -= instance.OnMouse;
            @Mouse.performed -= instance.OnMouse;
            @Mouse.canceled -= instance.OnMouse;
            @CameraShortcut.started -= instance.OnCameraShortcut;
            @CameraShortcut.performed -= instance.OnCameraShortcut;
            @CameraShortcut.canceled -= instance.OnCameraShortcut;
            @ConsoleShortcut.started -= instance.OnConsoleShortcut;
            @ConsoleShortcut.performed -= instance.OnConsoleShortcut;
            @ConsoleShortcut.canceled -= instance.OnConsoleShortcut;
            @DoorShortcut.started -= instance.OnDoorShortcut;
            @DoorShortcut.performed -= instance.OnDoorShortcut;
            @DoorShortcut.canceled -= instance.OnDoorShortcut;
            @LeftMoveCamera.started -= instance.OnLeftMoveCamera;
            @LeftMoveCamera.performed -= instance.OnLeftMoveCamera;
            @LeftMoveCamera.canceled -= instance.OnLeftMoveCamera;
            @RightMoveCamera.started -= instance.OnRightMoveCamera;
            @RightMoveCamera.performed -= instance.OnRightMoveCamera;
            @RightMoveCamera.canceled -= instance.OnRightMoveCamera;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMouse(InputAction.CallbackContext context);
        void OnCameraShortcut(InputAction.CallbackContext context);
        void OnConsoleShortcut(InputAction.CallbackContext context);
        void OnDoorShortcut(InputAction.CallbackContext context);
        void OnLeftMoveCamera(InputAction.CallbackContext context);
        void OnRightMoveCamera(InputAction.CallbackContext context);
    }
}
